#include <Arduino.h>
#define new_index_len 18892
char new_index[] = "<!doctype html>\n"
"<html>\n"
"<head>\n"
"<meta charset=\"utf-8\">\n"
"<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">\n"
"<title>PrinterCam</title>\n"
"<style>\n"
"body {\n"
"	font-family: Arial, Helvetica, sans-serif;\n"
"	background: #181818;\n"
"	color: #EFEFEF;\n"
"	font-size: 16px\n"
"}\n"
"\n"
"h2 {\n"
"	font-size: 18px\n"
"}\n"
"\n"
"section.main {\n"
"	display: flex\n"
"}\n"
"\n"
"#menu, section.main {\n"
"	flex-direction: column\n"
"}\n"
"\n"
"#menu {\n"
"	display: none;\n"
"	flex-wrap: nowrap;\n"
"	min-width: 340px;\n"
"	background: #363636;\n"
"	padding: 8px;\n"
"	border-radius: 4px;\n"
"	margin-top: -10px;\n"
"	margin-right: 10px;\n"
"}\n"
"\n"
"#content {\n"
"	display: flex;\n"
"	flex-wrap: wrap;\n"
"	align-items: stretch\n"
"}\n"
"\n"
"figure {\n"
"	padding: 0px;\n"
"	margin: 0;\n"
"	-webkit-margin-before: 0;\n"
"	margin-block-start: 0;\n"
"	-webkit-margin-after: 0;\n"
"	margin-block-end: 0;\n"
"	-webkit-margin-start: 0;\n"
"	margin-inline-start: 0;\n"
"	-webkit-margin-end: 0;\n"
"	margin-inline-end: 0\n"
"}\n"
"\n"
"figure img {\n"
"	display: block;\n"
"	width: 100%;\n"
"	height: auto;\n"
"	border-radius: 4px;\n"
"	margin-top: 8px;\n"
"}\n"
"\n"
"@media ( min-width : 800px) and (orientation:landscape) {\n"
"	#content {\n"
"		display: flex;\n"
"		flex-wrap: nowrap;\n"
"		align-items: stretch\n"
"	}\n"
"	figure img {\n"
"		display: block;\n"
"		max-width: 100%;\n"
"		max-height: calc(100vh - 40px);\n"
"		width: auto;\n"
"		height: auto\n"
"	}\n"
"	figure {\n"
"		padding: 0 0 0 0px;\n"
"		margin: 0;\n"
"		-webkit-margin-before: 0;\n"
"		margin-block-start: 0;\n"
"		-webkit-margin-after: 0;\n"
"		margin-block-end: 0;\n"
"		-webkit-margin-start: 0;\n"
"		margin-inline-start: 0;\n"
"		-webkit-margin-end: 0;\n"
"		margin-inline-end: 0\n"
"	}\n"
"}\n"
"\n"
"section#buttons {\n"
"	display: flex;\n"
"	flex-wrap: nowrap;\n"
"	justify-content: space-between\n"
"}\n"
"\n"
"#nav-toggle {\n"
"	cursor: pointer;\n"
"	display: block\n"
"}\n"
"\n"
"#nav-toggle-cb {\n"
"	outline: 0;\n"
"	opacity: 0;\n"
"	width: 0;\n"
"	height: 0\n"
"}\n"
"\n"
"#nav-toggle-cb:checked+#menu {\n"
"	display: flex\n"
"}\n"
"\n"
".input-group {\n"
"	display: flex;\n"
"	flex-wrap: nowrap;\n"
"	line-height: 22px;\n"
"	margin: 5px 0\n"
"}\n"
"\n"
".input-group>label {\n"
"	display: inline-block;\n"
"	padding-right: 10px;\n"
"	min-width: 47%\n"
"}\n"
"\n"
".input-group input, .input-group select {\n"
"	flex-grow: 1\n"
"}\n"
"\n"
".range-max, .range-min {\n"
"	display: inline-block;\n"
"	padding: 0 5px\n"
"}\n"
"\n"
"button {\n"
"	display: block;\n"
"	margin: 5px;\n"
"	padding: 0 12px;\n"
"	border: 0;\n"
"	line-height: 28px;\n"
"	cursor: pointer;\n"
"	color: #fff;\n"
"	background: #ff3034;\n"
"	border-radius: 5px;\n"
"	font-size: 16px;\n"
"	outline: 0\n"
"}\n"
"\n"
"button:hover {\n"
"	background: #ff494d\n"
"}\n"
"\n"
"button:active {\n"
"	background: #f21c21\n"
"}\n"
"\n"
"button.disabled {\n"
"	cursor: default;\n"
"	background: #a0a0a0\n"
"}\n"
"\n"
"input[type=range] {\n"
"	-webkit-appearance: none;\n"
"	width: 100%;\n"
"	height: 22px;\n"
"	background: #363636;\n"
"	cursor: pointer;\n"
"	margin: 0\n"
"}\n"
"\n"
"input[type=range]:focus {\n"
"	outline: 0\n"
"}\n"
"\n"
"input[type=range]::-webkit-slider-runnable-track {\n"
"	width: 100%;\n"
"	height: 2px;\n"
"	cursor: pointer;\n"
"	background: #EFEFEF;\n"
"	border-radius: 0;\n"
"	border: 0 solid #EFEFEF\n"
"}\n"
"\n"
"input[type=range]::-webkit-slider-thumb {\n"
"	border: 1px solid rgba(0, 0, 30, 0);\n"
"	height: 22px;\n"
"	width: 22px;\n"
"	border-radius: 50px;\n"
"	background: #ff3034;\n"
"	cursor: pointer;\n"
"	-webkit-appearance: none;\n"
"	margin-top: -11.5px\n"
"}\n"
"\n"
"input[type=range]:focus::-webkit-slider-runnable-track {\n"
"	background: #EFEFEF\n"
"}\n"
"\n"
"input[type=range]::-moz-range-track {\n"
"	width: 100%;\n"
"	height: 2px;\n"
"	cursor: pointer;\n"
"	background: #EFEFEF;\n"
"	border-radius: 0;\n"
"	border: 0 solid #EFEFEF\n"
"}\n"
"\n"
"input[type=range]::-moz-range-thumb {\n"
"	border: 1px solid rgba(0, 0, 30, 0);\n"
"	height: 22px;\n"
"	width: 22px;\n"
"	border-radius: 50px;\n"
"	background: #ff3034;\n"
"	cursor: pointer\n"
"}\n"
"\n"
"input[type=range]::-ms-track {\n"
"	width: 100%;\n"
"	height: 2px;\n"
"	cursor: pointer;\n"
"	background: 0 0;\n"
"	border-color: transparent;\n"
"	color: transparent\n"
"}\n"
"\n"
"input[type=range]::-ms-fill-lower {\n"
"	background: #EFEFEF;\n"
"	border: 0 solid #EFEFEF;\n"
"	border-radius: 0\n"
"}\n"
"\n"
"input[type=range]::-ms-fill-upper {\n"
"	background: #EFEFEF;\n"
"	border: 0 solid #EFEFEF;\n"
"	border-radius: 0\n"
"}\n"
"\n"
"input[type=range]::-ms-thumb {\n"
"	border: 1px solid rgba(0, 0, 30, 0);\n"
"	height: 22px;\n"
"	width: 22px;\n"
"	border-radius: 50px;\n"
"	background: #ff3034;\n"
"	cursor: pointer;\n"
"	height: 2px\n"
"}\n"
"\n"
"input[type=range]:focus::-ms-fill-lower {\n"
"	background: #EFEFEF\n"
"}\n"
"\n"
"input[type=range]:focus::-ms-fill-upper {\n"
"	background: #363636\n"
"}\n"
"\n"
".switch {\n"
"	display: block;\n"
"	position: relative;\n"
"	line-height: 22px;\n"
"	font-size: 16px;\n"
"	height: 22px\n"
"}\n"
"\n"
".switch input {\n"
"	outline: 0;\n"
"	opacity: 0;\n"
"	width: 0;\n"
"	height: 0\n"
"}\n"
"\n"
".slider {\n"
"	width: 50px;\n"
"	height: 22px;\n"
"	border-radius: 22px;\n"
"	cursor: pointer;\n"
"	background-color: grey\n"
"}\n"
"\n"
".slider, .slider:before {\n"
"	display: inline-block;\n"
"	transition: .4s\n"
"}\n"
"\n"
".slider:before {\n"
"	position: relative;\n"
"	content: \"\";\n"
"	border-radius: 50%;\n"
"	height: 16px;\n"
"	width: 16px;\n"
"	left: 4px;\n"
"	top: 3px;\n"
"	background-color: #fff\n"
"}\n"
"\n"
"input:checked+.slider {\n"
"	background-color: #ff3034\n"
"}\n"
"\n"
"input:checked+.slider:before {\n"
"	-webkit-transform: translateX(26px);\n"
"	transform: translateX(26px)\n"
"}\n"
"\n"
"select {\n"
"	border: 1px solid #363636;\n"
"	font-size: 14px;\n"
"	height: 22px;\n"
"	outline: 0;\n"
"	border-radius: 5px\n"
"}\n"
"\n"
".image-container {\n"
"	position: relative;\n"
"	min-width: 160px\n"
"}\n"
"\n"
".close {\n"
"	position: absolute;\n"
"	right: 5px;\n"
"	top: 5px;\n"
"	background: #ff3034;\n"
"	width: 16px;\n"
"	height: 16px;\n"
"	border-radius: 100px;\n"
"	color: #fff;\n"
"	text-align: center;\n"
"	line-height: 18px;\n"
"	cursor: pointer\n"
"}\n"
"\n"
".hidden {\n"
"	display: none\n"
"}\n"
"\n"
"</style>\n"
"\n"
"</head>\n"
"<body>\n"
"	<section class=\"main\">\n"
"		<div id=\"logo\">\n"
"			<label for=\"nav-toggle-cb\" id=\"nav-toggle\">&#9776;&nbsp;&nbsp;Toggle\n"
"				settings</label>\n"
"		</div>\n"
"		<div id=\"content\">\n"
"			<div id=\"sidebar\">\n"
"				<input type=\"checkbox\" id=\"nav-toggle-cb\" checked=\"checked\">\n"
"				<nav id=\"menu\">\n"
"					<div class=\"input-group\" id=\"framesize-group\">\n"
"						<label for=\"framesize\">Resolution</label> <select id=\"framesize\"\n"
"							class=\"default-action\">\n"
"							<option value=\"10\">UXGA(1600x1200)</option>\n"
"							<option value=\"9\">SXGA(1280x1024)</option>\n"
"							<option value=\"8\">XGA(1024x768)</option>\n"
"							<option value=\"7\">SVGA(800x600)</option>\n"
"							<option value=\"6\">VGA(640x480)</option>\n"
"							<option value=\"5\" selected=\"selected\">CIF(400x296)</option>\n"
"							<option value=\"4\">QVGA(320x240)</option>\n"
"							<option value=\"3\">HQVGA(240x176)</option>\n"
"							<option value=\"0\">QQVGA(160x120)</option>\n"
"						</select>\n"
"					</div>\n"
"					<div class=\"input-group\" id=\"quality-group\">\n"
"						<label for=\"quality\">Quality</label>\n"
"						<div class=\"range-min\">10</div>\n"
"						<input type=\"range\" id=\"quality\" min=\"10\" max=\"63\" value=\"10\"\n"
"							class=\"default-action\">\n"
"						<div class=\"range-max\">63</div>\n"
"					</div>\n"
"					<div class=\"input-group\" id=\"brightness-group\">\n"
"						<label for=\"brightness\">Brightness</label>\n"
"						<div class=\"range-min\">-2</div>\n"
"						<input type=\"range\" id=\"brightness\" min=\"-2\" max=\"2\" value=\"0\"\n"
"							class=\"default-action\">\n"
"						<div class=\"range-max\">2</div>\n"
"					</div>\n"
"					<div class=\"input-group\" id=\"contrast-group\">\n"
"						<label for=\"contrast\">Contrast</label>\n"
"						<div class=\"range-min\">-2</div>\n"
"						<input type=\"range\" id=\"contrast\" min=\"-2\" max=\"2\" value=\"0\"\n"
"							class=\"default-action\">\n"
"						<div class=\"range-max\">2</div>\n"
"					</div>\n"
"					<div class=\"input-group\" id=\"saturation-group\">\n"
"						<label for=\"saturation\">Saturation</label>\n"
"						<div class=\"range-min\">-2</div>\n"
"						<input type=\"range\" id=\"saturation\" min=\"-2\" max=\"2\" value=\"0\"\n"
"							class=\"default-action\">\n"
"						<div class=\"range-max\">2</div>\n"
"					</div>\n"
"					<div class=\"input-group\" id=\"hmirror-group\">\n"
"						<label for=\"hmirror\">H-Mirror</label>\n"
"						<div class=\"switch\">\n"
"							<input id=\"hmirror\" type=\"checkbox\" class=\"default-action\"\n"
"								checked=\"checked\"> <label class=\"slider\" for=\"hmirror\"></label>\n"
"						</div>\n"
"					</div>\n"
"					<div class=\"input-group\" id=\"vflip-group\">\n"
"						<label for=\"vflip\">V-Flip</label>\n"
"						<div class=\"switch\">\n"
"							<input id=\"vflip\" type=\"checkbox\" class=\"default-action\"\n"
"								checked=\"checked\"> <label class=\"slider\" for=\"vflip\"></label>\n"
"						</div>\n"
"					</div>\n"
"					<div class=\"input-group\" id=\"flashlight-group\">\n"
"						<label for=\"flashlight\">Flashlight</label>\n"
"						<div class=\"switch\">\n"
"							<input id=\"flashlight\" type=\"checkbox\" class=\"default-action\">\n"
"							<label class=\"slider\" for=\"flashlight\"></label>\n"
"						</div>\n"
"					</div>\n"
"					<section id=\"buttons\">\n"
"						<button id=\"toggle-stream\">Start Stream</button>\n"
"					</section>\n"
"				</nav>\n"
"			</div>\n"
"			<figure>\n"
"				<div id=\"stream-container\" class=\"image-container hidden\">\n"
"					<div class=\"close\" id=\"close-stream\">×</div>\n"
"					<img id=\"stream\" src=\"\">\n"
"				</div>\n"
"			</figure>\n"
"		</div>\n"
"	</section>\n"
"	<script>\n"
"document.addEventListener('DOMContentLoaded', function (event) {\n"
"  var baseHost = document.location.origin\n"
"  var streamUrl = baseHost + ':81'\n"
"\n"
"  const hide = el => {\n"
"    el.classList.add('hidden')\n"
"  }\n"
"  const show = el => {\n"
"    el.classList.remove('hidden')\n"
"  }\n"
"\n"
"  const disable = el => {\n"
"    el.classList.add('disabled')\n"
"    el.disabled = true\n"
"  }\n"
"\n"
"  const enable = el => {\n"
"    el.classList.remove('disabled')\n"
"    el.disabled = false\n"
"  }\n"
"\n"
"  const updateValue = (el, value, updateRemote) => {\n"
"    updateRemote = updateRemote == null ? true : updateRemote\n"
"    let initialValue\n"
"    if (el.type === 'checkbox') {\n"
"      initialValue = el.checked\n"
"      value = !!value\n"
"      el.checked = value\n"
"    } else {\n"
"      initialValue = el.value\n"
"      el.value = value\n"
"    }\n"
"\n"
"    if (updateRemote && initialValue !== value) {\n"
"      updateConfig(el);\n"
"    }\n"
"  }\n"
"\n"
"  function updateConfig (el) {\n"
"    let value\n"
"    switch (el.type) {\n"
"      case 'checkbox':\n"
"        value = el.checked ? 1 : 0\n"
"        break\n"
"      case 'range':\n"
"      case 'select-one':\n"
"        value = el.value\n"
"        break\n"
"      case 'button':\n"
"      case 'submit':\n"
"        value = '1'\n"
"        break\n"
"      default:\n"
"        return\n"
"    }\n"
"\n"
"    const query = `${baseHost}/control?var=${el.id}&val=${value}`\n"
"\n"
"    fetch(query)\n"
"      .then(response => {\n"
"        console.log(`request to ${query} finished, status: ${response.status}`)\n"
"      })\n"
"  }\n"
"\n"
"  document\n"
"    .querySelectorAll('.close')\n"
"    .forEach(el => {\n"
"      el.onclick = () => {\n"
"        hide(el.parentNode)\n"
"      }\n"
"    })\n"
"\n"
"  // read initial values\n"
"  fetch(`${baseHost}/status`)\n"
"    .then(function (response) {\n"
"      return response.json()\n"
"    })\n"
"    .then(function (state) {\n"
"      document\n"
"        .querySelectorAll('.default-action')\n"
"        .forEach(el => {\n"
"          updateValue(el, state[el.id], false)\n"
"        })\n"
"    })\n"
"\n"
"  const view = document.getElementById('stream')\n"
"  const viewContainer = document.getElementById('stream-container')\n"
"  const streamButton = document.getElementById('toggle-stream')\n"
"  const closeButton = document.getElementById('close-stream')\n"
"\n"
"  const stopStream = () => {\n"
"    window.stop();\n"
"    streamButton.innerHTML = 'Start Stream'\n"
"  }\n"
"\n"
"  const startStream = () => {\n"
"    view.src = `${streamUrl}/stream`\n"
"    show(viewContainer)\n"
"    streamButton.innerHTML = 'Stop Stream'\n"
"  }\n"
"\n"
"  closeButton.onclick = () => {\n"
"    stopStream()\n"
"    hide(viewContainer)\n"
"  }\n"
"\n"
"  streamButton.onclick = () => {\n"
"    const streamEnabled = streamButton.innerHTML === 'Stop Stream'\n"
"    if (streamEnabled) {\n"
"      stopStream()\n"
"    } else {\n"
"      startStream()\n"
"    }\n"
"  }\n"
"\n"
"  // Attach default on change action\n"
"  document\n"
"    .querySelectorAll('.default-action')\n"
"    .forEach(el => {\n"
"      el.onchange = () => updateConfig(el)\n"
"    })\n"
"\n"
"  // Detection and framesize\n"
"  const framesize = document.getElementById('framesize')\n"
"\n"
"  framesize.onchange = () => {\n"
"    updateConfig(framesize)\n"
"  }\n"
"\n"
"\n"
"  const flashlight = document.getElementById('flashlight')\n"
"\n"
"  flashlight.onchange = () => {\n"
"    updateConfig(flashlight)\n"
"  }\n"
"})\n"
"\n"
"        </script>\n"
"</body>\n"
"</html>\n"
;
